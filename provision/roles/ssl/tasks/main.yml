---
- set_fact:
    ssl:
      certificates_dir: "{{ data_dir }}/certificates"
      config_dir: "{{ data_dir }}/letsencrypt/etc"
      work_dir: "{{ data_dir }}/letsencrypt/lib"
      log_dir: "{{ data_dir }}/letsencrypt/log"

- apt_repository:
    repo: ppa:certbot/certbot
    state: present

- name: Install certbot
  apt:
    package: certbot
    state: present
    update_cache: yes

- group:
    name: certbot
    state: present

- user:
    name: certbot
    group: certbot
    home: "{{ data_dir }}/letsencrypt"
    shell: /bin/false

- name: Allow certbot to access acme webroot
  user:
    name: certbot
    groups: "{{ acme.group }}"
    append: yes

- name: Allow certbot to access acme webroot
  user:
    name: nginx
    groups: "{{ acme.group }}"
    append: yes

- file:
    path: '{{ item }}'
    owner: certbot
    group: certbot
    state: directory
    mode: "u=rwx,g=rx,o-rwx"
  with_items:
    - "{{ ssl.certificates_dir }}"
    - "{{ ssl.config_dir }}"
    - "{{ ssl.config_dir }}/live"
    - "{{ ssl.work_dir }}"
    - "{{ ssl.log_dir }}"

- name: Fix log permissions
  file:
    dest: "{{ ssl.log_dir }}"
    owner: certbot
    group: certbot
    recurse: yes

- name: Create folders for certificates
  file:
    path: "{{ ssl.certificates_dir }}/{{ item }}"
    owner: certbot
    group: certbot
    state: directory
    mode: "u=rwx,g=rx,o-rwx"
  with_items: "{{ domains }}"

- name: Add certificate management script
  template:
    src: templates/obtain-or-renew-certificate.sh.j2
    dest: /usr/local/bin/obtain-or-renew-certificate.sh
    mode: "u=rx,g=rx,o=rx"

- name: Generate certificates
  shell: "/usr/local/bin/obtain-or-renew-certificate.sh '{{ item }}' '{{ env }}'"
  args:
    creates: "{{ ssl.certificates_dir }}/{{ item }}/privkey.pem"
    executable: /bin/bash
  become: yes
  become_user: certbot
  with_items: "{{ domains }}"

- name: Remove obsolete certbot cronjob
  file:
    path: /etc/cron.d/certbot
    state: absent

- name: Register cronjobs for certificate renewal
  cron:
    special_time: weekly
    user: certbot
    name: "Renew {{ item }}"
    cron_file: "certbot_renew_{{ item | regex_replace('\\.', '_') }}"
    job: "perl -e 'sleep int(rand(3600))' && /usr/local/bin/obtain-or-renew-certificate.sh '{{ item }}' '{{ env }}'"
  with_items: "{{ domains }}"

- name: Ensure cronjob mails
  cronvar:
    name: MAILTO
    value: "{{ owner.cron_mail }}"
    cron_file: "certbot_renew_{{ item | regex_replace('\\.', '_') }}"
  with_items: "{{ domains }}"
