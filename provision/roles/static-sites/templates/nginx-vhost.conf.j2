server {
  listen  443 ssl http2;
  server_name  www.{{ site.domain }};
  root {{ static_sites_config.www_home }}/{{ site.name }}/www;
  access_log {{ static_sites_config.www_home }}/{{ site.name }}/access.log;
  error_log {{ static_sites_config.www_home }}/{{ site.name }}/error.log warn;

  add_header X-Frame-Options "sameorigin" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
  add_header Referrer-Policy "no-referrer" always;
  {% if site.csp is defined %}
  add_header Content-Security-Policy "{{ site.csp }}" always;
  {% else %}
  add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'" always;
  {% endif %}

  http2_push_preload on;

  ssl_certificate {{ ssl.certificates_dir }}/{{ site.domain }}/fullchain.pem;
  ssl_certificate_key {{ ssl.certificates_dir }}/{{ site.domain }}/privkey.pem;

  return 301 https://{{ site.domain }}$request_uri;
}

server {
  listen  443 ssl http2;
  server_name  {{ site.domain }};
  root {{ static_sites_config.www_home }}/{{ site.name }}/www;
  access_log {{ static_sites_config.www_home }}/{{ site.name }}/access.log;
  error_log {{ static_sites_config.www_home }}/{{ site.name }}/error.log warn;

  add_header X-Frame-Options "sameorigin" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
  add_header Referrer-Policy "no-referrer" always;
  {% if site.csp is defined %}
  add_header Content-Security-Policy "{{ site.csp }}" always;
  {% else %}
  add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'" always;
  {% endif %}

  http2_push_preload on;

  ssl_certificate {{ ssl.certificates_dir }}/{{ site.domain }}/fullchain.pem;
  ssl_certificate_key {{ ssl.certificates_dir }}/{{ site.domain }}/privkey.pem;

  location /{{ site.name |hash('sha1') }}/ {
    index  index.html index.htm;
    alias {{ static_sites_config.www_home }}/{{ site.name }}/report/;
  }

  location / {
    index  index.html index.htm;
  }

  include {{ static_sites_config.www_home }}/{{ site.name }}/conf.d/*.conf;

  {% if site.restricted is defined %}
  auth_basic "Restricted";
  auth_basic_user_file /etc/nginx/htpasswd/{{ site.name }};
  {% endif %}
}
